package Destinatario;

import Sistema.Sistema;
import Observador.IObservador;

import java.time.LocalDate;

import ClassesSistema.*;
import Usuario.IUsuario;
import Console.Console;

public class Facade {
	
	private static Facade singleton;
	
	private Facade() {};
	
	public static Facade AcessarSingleton() {
		if(singleton == null) {
			singleton = new Facade();
		}
		return singleton;
	}
	
	private boolean aux;
	
	public void Run() {
		this.aux = true;
		Console c = new Console();
		
		while(this.aux) {
			c.Executar();
		}
	}
	
	public String Emprestar(int CodUsuario, int CodLivro) {
		IUsuario usuario = Sistema.getBiblioteca().getUsuario(CodUsuario);
		Livro livro = Sistema.getBiblioteca().getLivro(CodLivro);
		
		//Pq não foi possível
		boolean var = usuario.Emprestimo(livro);
		if(var == true) {
			return "Sucesso, você (" + usuario.getNome() + ") alugou " + livro.getTitulo();
		}
		return usuario.getNome() + " não foi possível alugar " + livro.getTitulo();
	}
	
	public String Devolver(int CodUsuario, int CodLivro) {
		IUsuario usuario = Sistema.getBiblioteca().getUsuario(CodUsuario);
		Livro livro = Sistema.getBiblioteca().getLivro(CodLivro);
		
		boolean var = usuario.Devolver(livro);
		String msg = "";
		if(var) {
			msg += livro.getTitulo() + " devolvido, obrigado " + usuario.getNome() + "\n"; 
		}else {
			msg += usuario.getNome() + ", nao foi localizado o emprestimo de " + livro.getTitulo();
		}
		return msg;
	}
	
	//Pronto
	public void ConsultaLivro(int CodLivro) {
		Livro livro = Sistema.getBiblioteca().getLivro(CodLivro);
		String msg = "";
		
		msg += "Titulo - " + livro.getTitulo();
		
		if(livro.getReservas().size() > 0) {
			msg += "\nNumero de Reservas - " + livro.getReservas().size();
			
			for(int i = 0; i < livro.getReservas().size(); i++) {
				int index = i + 1;
				msg += "\nReserva " + index + " - " + livro.getReservas().get(i).getUsuario().getNome();
			}
		}else {
			msg += "\nNenhuma Reserva.";
		}
		for(int i = 0; i < livro.getExemplares().size(); i++) {
			msg += "\nCodigo - " + livro.getExemplares().get(i).getId();
			if(livro.getExemplares().get(i).getStatus()) {
				msg += "\nDisponivel";
			}else {
				msg += "\nEmprestado para " + livro.getExemplares().get(i).getEmprestimo().getUsario().getNome();
				msg += "\nEmprestado em " + livro.getExemplares().get(i).getEmprestimo().getDataPegou();
				msg += "\nDevolucao prevista em " + livro.getExemplares().get(i).getEmprestimo().getDataDevolver();
			}
		}
	}
	
	//Pronto
	public String ConsultaAluno(int CodUsuario) {
		IUsuario usuario = Sistema.getBiblioteca().getUsuario(CodUsuario);
		String msg = usuario.Consulta();
		
		return msg;
	}
	
	//Pronto
	public String ConsultaProfessor(int CodUsuario) {
		IUsuario usuario = Sistema.getBiblioteca().getUsuario(CodUsuario);
		String msg = usuario.Consulta();
		
		return msg;
	}
	
	//Pronto
	public String Reservar(int CodUsuario, int CodLivro) {
		IUsuario usuario = Sistema.getBiblioteca().getUsuario(CodUsuario);
		Livro livro = Sistema.getBiblioteca().getLivro(CodLivro);
		
		boolean var = usuario.Reservar(livro);
		
		String msg;
		
		if(var) {
			msg = "Senhor(a), " + usuario.getNome() + " o livro " + livro.getTitulo() + " foi reservado.\n";
		}else {
			msg = "Senhor(a), " + usuario.getNome() + " nao foi possivel reservar o livro " + livro.getTitulo() + "\n";
		}
		return msg;
	}
	
	//Pronto
	public String Observar(int CodUsuario, int CodLivro) {
		IUsuario usuario = Sistema.getBiblioteca().getUsuario(CodUsuario);
		Livro livro = Sistema.getBiblioteca().getLivro(CodLivro);
		
		livro.addObserver((IObservador) usuario);
		
		return "";
	}
	public String Sair() {
		//Sair
		return "EE";
	}
}
